# This .travis.yml is based on LOOT's .travis.yml:
# https://github.com/loot/loot/blob/dev/.travis.yml
 

# We are (unfortunately) dealing with a C++ project.
language: cpp
compiler: gcc

# Use Ubuntu 14.04.5 LTS (Trusty Tahr) instead of Ubuntu 12.04.5 LTS (Precise Pangolin)
dist: trusty

cache:
  directories:
    # Cache the boost install
    - $HOME/boost_1_61_0/boost
    - $HOME/boost_1_61_0/stage/lib

matrix:
  include:
    - compiler: gcc
      env: CC_COMPILER_NAME='gcc-6' CXX_COMPILER_NAME='g++-6'
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - *default_packages
            - gcc-6
            - g++-6

# We're going to need cmake, MPI and the mono runtime.
addons:
  apt:
    packages: &default_packages
      - mono-runtime
      - libmono-system-xml4.0-cil
      - libmono-system-core4.0-cil
      - cmake
      - mpich
      - libmpich-dev
      # Don't grab the APT boost package, because that package is stale.
      # We'll need to build boost ourselves.
      # - libboost-all-dev

before_install:
  - export CXX="$CXX_COMPILER_NAME" CC="$CC_COMPILER_NAME"
  # Print the CMake version.
  - cmake --version
  # Grab the gtest report pretty printer.
  - wget https://github.com/jonathanvdc/gtest-report-tools/releases/download/v0.1.0-retry/gtest-report-tools.zip
  - unzip gtest-report-tools.zip -d gtest-report-tools
  # Build and install boost.
  - echo "using mpi ;" > ~/site-config.jam
  - wget https://raw.githubusercontent.com/WrinklyNinja/ci-scripts/1.0.0/install_boost.py
  - python install_boost.py --directory ~ --boost-version 1.61.0 atomic chrono date_time filesystem iostreams locale log regex system thread serialization mpi
  # Set the BOOST_ROOT environment variable.
  - export BOOST_ROOT=$HOME/boost_1_61_0
  - export LD_LIBRARY_PATH=$HOME/boost_1_61_0/stage/lib:$LD_LIBRARY_PATH

script:
  # `make all; make test`, but fancier.
  - make all
  - ./ci/run-tests.sh
