/**
 * Script for the visualizer webpage.
 */

$(document).ready(function(){
    // Register the file-loading event
    $('#file-input').on('change', readSingleFile);
})

// File reading

function readSingleFile(e) {
    var file = e.target.files[0];
    if (!file) return;
        
    var reader = new FileReader();
    reader.onload = e => handleFile(e.target.result);

    reader.readAsText(file);
}

function handleFile(contents) {
    var data = JSON.parse(contents);
    cleanData(data);
    console.log(data);
    // Load the data as a new visualizer
    visualizer = new Visualizer(data);
}

/// Cleans up the JSON that boost generated by parsing strings back to numerics where needed.
function cleanData(data){
    for(i in data.towns){
        town = data.towns[i];
        town.size = parseInt(town.size);
        town.lat = parseFloat(town.lat);
        town.long = parseFloat(town.long);
    }
    for(i in data.days){
        day = data.days[i];
        for(town in day)
            day[town] = parseInt(day[town]);
    }
}



// Class: Visualizer

var Visualizer = function(data){
    this.days = data.days;
    this.towns = data.towns;
    this.initialize();
}

Visualizer.prototype.initialize = function(){
    this.maxDays = this.days.length;
    $('.days').text(this.maxDays);
    // set up the view
    this.makeTable();
    this.setDay(0);
}

Visualizer.prototype.makeTable = function(){
    // Clear the current view
    $view = $("#view");
    $view.html('');

    // Make a table
    $table = $('<table>');
    $view.append($table);

    // Header
    $row = $('<tr>');
    $row.append($('<th>Name</th>'));
    $row.append($('<th>Inhabitants</th>'));
    $row.append($('<th>Infected</th>'));
    $row.append($('<th>Percentage</th>'));
    $table.append($row);

    // Rows
    for(town in this.towns){
        $row = $('<tr>', {id:town});
        $row.append($('<td>' + town + '</td>'));
        $row.append($('<td>' + this.towns[town].size + '</td>'));
        $row.append($('<td>', {class:'infected'}));
        $row.append($('<td>', {class:'percent'}));
        $table.append($row);
    }
}

Visualizer.prototype.setDay = function(day){
    // Make sure it's a valid day to visualize.
    if(day >= this.maxDays || day < 0){
        console.log(`Invalid day: ${day}.`)
        return;
    }

    this.day = day;
    $('.current-day').text(this.day);

    var currentDay = this.days[day];
    var total = 0;
    // Update the view further
    for(town in this.towns){
        // If there's no measurement, then it must be zero
        total += val = currentDay[town] || 0;
        // Put the amount of infected
        $('#' + town + ' .infected').text(val);
        // Write the percentage of infected if any
        var percent = val/this.towns[town].size*100;
        $('#' + town + ' .percent').text(percent? percent.toFixed(1)+'%' : '');
    }
    // Put the total infected where we can see it.
    $('.total-infected').text(total);
}


// User control:

function prevDay(){
    visualizer.setDay(visualizer.day - 1);
}
function nextDay(){
    visualizer.setDay(visualizer.day + 1);
}